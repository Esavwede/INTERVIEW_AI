{"version":3,"file":"server.js","sourceRoot":"/","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Setup express server.\r\n */\r\nimport { config } from \"dotenv\"\r\nconfig()\r\n\r\n\r\n\r\nimport cors from \"cors\" \r\nimport cookieParser from 'cookie-parser';\r\nimport morgan from 'morgan';\r\nimport path from 'path';\r\nimport helmet from 'helmet';\r\nimport express, { Request, Response, NextFunction } from 'express';\r\nimport logger from 'jet-logger';\r\nimport cookieSession from 'cookie-session';\r\nimport 'express-async-errors';\r\nimport passport from \"./middleware/googleAuth/signinWithGoogle\"\r\n\r\n\r\nimport EnvVars from '@src/common/EnvVars';\r\nimport HttpStatusCodes from '@src/common/HttpStatusCodes';\r\nimport { RouteError } from '@src/common/classes';\r\nimport { NodeEnvs } from '@src/common/misc';\r\nimport { routes } from './routes';\r\n\r\n\r\nconst app = express();\r\n\r\n// Basic middleware\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended: true}));\r\napp.use(cookieParser(EnvVars.CookieProps.Secret))\r\n\r\n\r\n\r\n// Cors \r\napp.use(cors({\r\n  origin: '*', // Allows clear all origins, you can restrict this to specific origins\r\n}));\r\n\r\n\r\n// Cookie Sessions \r\napp.use(cookieSession({\r\n  maxAge: 24 * 60 * 60 * 1000, // 24 hours\r\n  keys: [process.env.COOKIE_KEY || 'random-cookie-key']\r\n}))\r\n\r\n\r\n// Passport \r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n\r\n// Serve static files from the 'public' directory\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n\r\n// Show routes called in console during development\r\nif (EnvVars.NodeEnv === NodeEnvs.Dev.valueOf()) {\r\n  app.use(morgan('dev'));\r\n}\r\n\r\n// Security\r\nif (EnvVars.NodeEnv === NodeEnvs.Production.valueOf()) {\r\n  app.use(helmet());\r\n}\r\n\r\n// Add APIs, must be after middleware\r\nroutes(app) \r\n\r\n\r\n\r\n// Add error handler\r\napp.use((\r\n  err: Error,\r\n  _: Request,\r\n  res: Response,\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  next: NextFunction,\r\n) => {\r\n  if (EnvVars.NodeEnv !== NodeEnvs.Test.valueOf()) {\r\n    logger.err(err, true);\r\n  }\r\n  let status = HttpStatusCodes.BAD_REQUEST;\r\n  if (err instanceof RouteError) {\r\n    status = err.status;\r\n  }\r\n  return res.status(status).json({ error: err.message });\r\n});\r\n\r\n\r\n\r\n// **** Front-End Content **** //\r\n\r\n// // Set views directory (html)\r\n// const viewsDir = path.join(__dirname, 'views');\r\n// app.set('views', viewsDir);\r\n\r\n// Set static directory (js and css).\r\nconst staticDir = path.join(__dirname, 'public');\r\napp.use(express.static(staticDir));\r\n\r\n// Nav to users pg by default\r\napp.get('/', (_: Request, res: Response) => {\r\n  return res.status(200).json({ success: true, \"msg\":\"Welcome to the Interview AI API\"})\r\n});\r\n\r\n// Redirect to login if not logged in.\r\napp.get('/users', (_: Request, res: Response) => {\r\n  return res.status(200).json({ success: true, \"msg\":\"Welcome to the Interview AI API\"})\r\n});\r\n\r\napp.get('/auth/google', passport.authenticate('google', {\r\n  scope: ['profile', 'email']\r\n}));\r\n\r\n\r\n// app.get('/auth/google/callback', passport.authenticate('google', { session: false }), (req, res) => {\r\n//   // Successful authentication, redirect home.\r\n//   console.log( req.user ) \r\n//   res.send(\"Authentication Successfull For Interview AI\") \r\n// });\r\n\r\n// **** Export default **** //\r\n\r\nexport { passport } \r\nexport default app\r\n"]}