{"version":3,"file":"learningProfile.repo.js","sourceRoot":"/","sources":["repos/learnningProfile/learningProfile.repo.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iEAAgF;AAOhF,MAAa,mBAAmB;IAG5B;IAGA,CAAC;IAGK,MAAM,CAAE,UAAkE;;YAE5E,MAAM,iCAAe,CAAC,MAAM,CAAE,UAAU,CAAE,CAAA;QAC9C,CAAC;KAAA;IAGK,OAAO,CAAE,MAA+B;;YAE1C,MAAM,OAAO,GAAG,MAAM,iCAAe,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,EAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;YAC5F,OAAO,OAAO,CAAA;QAClB,CAAC;KAAA;CAGJ;AAtBD,kDAsBC","sourcesContent":["import { ILearningProfile, LearningProfile } from \"@src/models/learningProfile\";\r\nimport { Types } from \"mongoose\";\r\n\r\n\r\n\r\n\r\n\r\nexport class LearningProfileRepo\r\n{\r\n\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n\r\n    async create( profileDoc: Pick< ILearningProfile, 'userId' | 'learningModules' > ): Promise< void > \r\n    {\r\n        await LearningProfile.create( profileDoc )\r\n    }\r\n\r\n\r\n    async findOne( userId: string | Types.ObjectId  ): Promise< Pick<ILearningProfile, 'userId'> | null > \r\n    {\r\n        const profile = await LearningProfile.findOne({ userId },{ _id: 0, userId: 1}).lean().exec()  \r\n        return profile\r\n    }\r\n\r\n\r\n}"]}