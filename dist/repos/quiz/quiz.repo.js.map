{"version":3,"file":"quiz.repo.js","sources":["repos/quiz/quiz.repo.ts"],"sourceRoot":"/","sourcesContent":["\r\nimport { IGetQuizDTO_Res, IQuizDTO_Req, IUpdateQuiz_Req } from \"@src/DTOs/quiz/quiz.dto\";\r\nimport { IQuiz, Quiz } from \"@src/models/Quiz\";\r\nimport logger from \"@src/system/logger/logger\";\r\n\r\n\r\n\r\n\r\nexport class QuizRepo \r\n{\r\n\r\n\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n\r\n    async create(  quiz: IQuizDTO_Req ): Promise< boolean > \r\n    {\r\n        try \r\n        {\r\n            const newQuiz = await Quiz.create( quiz )\r\n\r\n            if( !newQuiz )\r\n            {\r\n                return false \r\n            }\r\n\r\n            return true \r\n        }\r\n        catch(e: any )\r\n        {\r\n            logger.error(e,'REPO ERROR: COULD NOT CREATE QUIZ')\r\n            return false \r\n        }\r\n    }\r\n\r\n    \r\n    async find( _id: string ): Promise< { } | null > \r\n    {\r\n            var quiz = await Quiz.findById(_id).populate('questions').select('_id description title questions moduleId modulePartNumber').lean() \r\n\r\n            logger.debug( quiz ) \r\n            return quiz\r\n    }\r\n\r\n    async update( _id: string, updateBody: IUpdateQuiz_Req ): Promise< number > \r\n    {\r\n\r\n        logger.info(\"QUIZ_REPO: UPDATING QUIZ\")\r\n        const result = await Quiz.updateOne({ _id }, updateBody,{ rawResult: true } ).lean() \r\n\r\n        logger.info( result )\r\n        return result.matchedCount \r\n    }\r\n\r\n    async delete( _id: string ): Promise<number>\r\n    {\r\n        const { deletedCount } = await Quiz.deleteOne({ _id })\r\n        return deletedCount\r\n    }\r\n\r\n\r\n\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA,2CAA+C;AAC/C,uEAA+C;AAK/C,MAAa,QAAQ;IAIjB;IAGA,CAAC;IAGK,MAAM,CAAG,IAAkB;;YAE7B,IACA,CAAC;gBACG,MAAM,OAAO,GAAG,MAAM,WAAI,CAAC,MAAM,CAAE,IAAI,CAAE,CAAA;gBAEzC,IAAI,CAAC,OAAO,EACZ,CAAC;oBACG,OAAO,KAAK,CAAA;gBAChB,CAAC;gBAED,OAAO,IAAI,CAAA;YACf,CAAC;YACD,OAAM,CAAM,EACZ,CAAC;gBACG,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,mCAAmC,CAAC,CAAA;gBACnD,OAAO,KAAK,CAAA;YAChB,CAAC;QACL,CAAC;KAAA;IAGK,IAAI,CAAE,GAAW;;YAEf,IAAI,IAAI,GAAG,MAAM,WAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,2DAA2D,CAAC,CAAC,IAAI,EAAE,CAAA;YAEpI,gBAAM,CAAC,KAAK,CAAE,IAAI,CAAE,CAAA;YACpB,OAAO,IAAI,CAAA;QACnB,CAAC;KAAA;IAEK,MAAM,CAAE,GAAW,EAAE,UAA2B;;YAGlD,gBAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAA;YACvC,MAAM,MAAM,GAAG,MAAM,WAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,UAAU,EAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;YAEpF,gBAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAA;YACrB,OAAO,MAAM,CAAC,YAAY,CAAA;QAC9B,CAAC;KAAA;IAEK,MAAM,CAAE,GAAW;;YAErB,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,WAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,CAAA;YACtD,OAAO,YAAY,CAAA;QACvB,CAAC;KAAA;CAIJ;AAzDD,4BAyDC","debug_id":"faf18517-c391-5bff-96aa-ee35a8f3458a"}