{"version":3,"file":"user.repo.js","sources":["repos/user/user.repo.ts"],"sourceRoot":"/","sourcesContent":["\r\n\r\nimport { UserDTO } from \"@src/DTOs/user/user\"\r\nimport { IUser, User } from \"../../models/User\"\r\nimport { ILearningModuleOverview } from \"@src/models/learningProfile\"\r\nimport logger from \"@src/system/logger/logger\"\r\n\r\n\r\nexport interface INewUser { _id: string }\r\n\r\n\r\nexport class UserRepository \r\n{\r\n\r\n    async create( user: UserDTO ): Promise< Pick<INewUser,'_id' > >\r\n    {\r\n        var newUser = await User.create( user )\r\n        var userObject = { _id: newUser._id as string }\r\n        return userObject \r\n    }\r\n\r\n    async findByEmail( email: string ): Promise<IUser | null > \r\n    {\r\n            const user = await User.findOne({ email },{ _id: 1, email: 1, userHasCreatedFirstJobProfile: 1, password: 1, newUser: 1, isVerified: 1, firstname: 1, lastname: 1, learningProfile: 1 })\r\n\r\n            if(user)\r\n            { \r\n                logger.info(`User_Repo: User Found: ${ String( user._id ) }`)\r\n                return user \r\n            }\r\n\r\n                logger.info(`User_Repo: User Not Found `)\r\n                return user \r\n    }\r\n\r\n    async update( _id: string , updateBody: Partial< Pick< IUser, 'firstname' | 'lastname' | 'email' | 'password' > >): Promise< boolean | null > \r\n    {\r\n        const { modifiedCount } = await User.updateOne({ _id },updateBody,{ upsert: false })\r\n\r\n        if( !modifiedCount ) return null \r\n        return true \r\n    }\r\n\r\n    async findById( userID: string ): Promise< IUser | null > \r\n    {\r\n            const user = await User.findByIdAndUpdate({ _id: userID },{ isVerified: true })\r\n            return user\r\n    }  \r\n\r\n    async setUserNewToFalse( userID: string ): Promise< number >\r\n    {\r\n        const { modifiedCount }  = await User.updateOne({ _id: userID },{ newUser: false }) \r\n        return modifiedCount\r\n    } \r\n\r\n    async saveLearningModuleOverview( userID: string, learningModuleOverviewArray: ILearningModuleOverview[] ): Promise< number > \r\n    {\r\n        const { matchedCount } = await User.updateOne({ _id: userID },{ $push:{ learningProfile: {$each: learningModuleOverviewArray } }})\r\n        return matchedCount\r\n    }\r\n    \r\n    async getLearningModuleOverview( userId: string, moduleId: string ): Promise< ILearningModuleOverview | null > \r\n    {\r\n        const learningModuleOverview = await User.findOne(\r\n             { _id: userId},\r\n             { learningProfile: { $elemMatch: { moduleId: moduleId }} }\r\n            ) \r\n\r\n        if( !learningModuleOverview )\r\n        {\r\n            return null \r\n        }\r\n       \r\n            return learningModuleOverview.learningProfile[0] \r\n    }\r\n    \r\n    async updateLearningModuleCurrentPart( userId: string, moduleId: string, newCurrentPartIndex: number )\r\n    {\r\n        const update = await User.updateOne(\r\n            { \r\n              _id: userId, \r\n              \"learningProfile\": { $elemMatch: { moduleId: moduleId } }\r\n            },\r\n            { \r\n              $set: { \"learningProfile.$.currentPart\": newCurrentPartIndex } \r\n            }\r\n          )\r\n\r\n          if( update ){ console.log( update.modifiedCount )}\r\n          console.log('-------Here !-----')\r\n          console.log( update )\r\n    }\r\n\r\n    async markUserHasCreatedFirstJobProfileAsFalse\r\n    (\r\n        userId: string \r\n\r\n    ): Promise<number> \r\n    {\r\n        const { modifiedCount } = await User.updateOne({ _id: userId },{ userHasCreatedFirstJobProfile: true }) \r\n        return modifiedCount\r\n    }\r\n\r\n    async markLearningModulePartAsCompleted( userId: string, learningModuleId: string, partTitle: string  ): Promise<number> \r\n    {\r\n        \r\n        // Update query\r\n       const { modifiedCount } =  await User.updateOne(\r\n          {\r\n             _id: userId,\r\n            \"learningProfile._id\": learningModuleId,\r\n            \"learningProfile.partsMetaData.title\": partTitle // Ensure the title exists in partsMetaData\r\n          },\r\n          {\r\n            $set: {\r\n              \"learningProfile.$[profile].partsMetaData.$[part].hasBeenCompleted\": true // Update the hasBeenCompleted status\r\n            }\r\n          },\r\n          {\r\n            arrayFilters: [\r\n              { \"profile._id\": { $exists: true } }, // Ensure the learningProfile exists\r\n              { \"part.title\": partTitle } // Target the part with the matching title\r\n            ]\r\n          }\r\n        );\r\n\r\n        return modifiedCount\r\n        \r\n    }\r\n    \r\n}"],"names":[],"mappings":"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","debug_id":"e6da5998-89fd-5438-807f-1a35ffbbaf76"}