{"version":3,"file":"connect.js","sourceRoot":"/","sources":["system/database/connect.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAWA,4DAkBC;AA5BD,wDAA2C;AAC3C,8DAAsC;AACtC,oDAA8B;AAC9B,mCAA+B;AAC/B,IAAA,eAAM,GAAE,CAAA;AAGR,MAAM,UAAU,GAAiB,gBAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;AAC5D,MAAM,MAAM,GAAW,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,sCAAsC,CAAA;AAEnF,SAAsB,wBAAwB;;QAE1C,IACA,CAAC;YACG,gBAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAA;YAC3C,MAAM,EAAE,GAAG,kBAAQ,CAAC,UAAU,CAAA;YAE9B,EAAE,CAAC,EAAE,CAAC,WAAW,EAAC,GAAE,EAAE,GAAE,gBAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAA,CAAA,CAAC,CAAE,CAAA;YACtE,EAAE,CAAC,EAAE,CAAC,OAAO,EAAC,CAAC,CAAC,EAAC,EAAE,GAAE,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,2BAA2B,CAAC,CAAA,CAAA,CAAC,CAAE,CAAA;YAEnE,MAAM,kBAAQ,CAAC,OAAO,CAAE,MAAM,EAAE,UAAU,CAAE,CAAA;YAC5C,OAAO,EAAE,CAAA;QACb,CAAC;QACD,OAAM,CAAM,EACZ,CAAC;YACG,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,2BAA2B,CAAC,CAAA;YAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACnB,CAAC;IACL,CAAC;CAAA","sourcesContent":["\r\nimport mongoose,{ connect} from \"mongoose\";\r\nimport logger from \"../logger/logger\";\r\nimport appConfig from \"config\" \r\nimport { config } from \"dotenv\"\r\nconfig() \r\n\r\ninterface I_DB_OPTIONS { }\r\nconst DB_OPTIONS: I_DB_OPTIONS = appConfig.get(\"db.options\")\r\nconst DB_URI: string = process.env.DB_URI || \"mongodb://localhost:27017/mydatabase\"\r\n\r\nexport async function createDatabaseConnection(): Promise<mongoose.Connection>\r\n{\r\n    try \r\n    {\r\n        logger.info(\"Creating Database Connection\")\r\n        const db = mongoose.connection \r\n\r\n        db.on(\"connected\",()=>{ logger.info(\"Database connection created \")} )\r\n        db.on(\"error\",(e)=>{ logger.error(e,\"database connection error\")} )\r\n\r\n        await mongoose.connect( DB_URI, DB_OPTIONS )\r\n        return db\r\n    }\r\n    catch(e: any)\r\n    {   \r\n        logger.error(e,'DATABASE CONNECTION ERROR')\r\n        process.exit(1) \r\n    }\r\n}"]}