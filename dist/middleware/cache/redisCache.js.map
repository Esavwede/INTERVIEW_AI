{"version":3,"file":"redisCache.js","sources":["middleware/cache/redisCache.ts"],"sourceRoot":"/","sourcesContent":["\r\n\r\nimport { config } from \"dotenv\";\r\nconfig();\r\nimport { createClient, RedisClientType } from \"redis\";\r\nimport logger from \"@src/system/logger/logger\";\r\nimport { Request, Response, NextFunction } from \"express-serve-static-core\";\r\n\r\n\r\nlet RedisClient: RedisClientType<any> | undefined;\r\nlet setCache: ((key: string, data: {} | string ) => Promise<void>) | undefined;\r\n\r\n\r\nexport async function initializeRedis() {\r\n  try {\r\n\r\n    logger.info('Initializing Redis Client ') \r\n\r\n    // Initialize Redis Client\r\n    RedisClient =  createClient({\r\n      password: process.env.REDIS_PASSWORD || '' ,\r\n      socket: {\r\n          host: 'redis-13227.c245.us-east-1-3.ec2.redns.redis-cloud.com',\r\n          port: 13227\r\n      }\r\n  });\r\n\r\n    // Error Event Listener\r\n    RedisClient.on(\"error\", (err) => console.error(\"Redis Client Error\", err));\r\n    RedisClient.on(\"connection\",()=>{ logger.info(\"Redis Client Initialized\" )})\r\n\r\n\r\n    // Connect to the Redis server\r\n    await RedisClient.connect();\r\n\r\n\r\n    // Cache middleware to check Redis for cached data\r\n    const cacheMiddleware = async (req: Request, res: Response, next: NextFunction) => {\r\n      const key = req.originalUrl;\r\n\r\n      try {\r\n        // Check Redis for cached data\r\n        const cachedData = await RedisClient?.get(key);\r\n\r\n        if (cachedData) {\r\n          // If cached data is found, send it as the response\r\n          return res.status(200).json(JSON.parse(cachedData));\r\n        } else {\r\n          // Otherwise, proceed to the next middleware/route handler\r\n          next();\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Redis cache error:\", err);\r\n        next();\r\n      }\r\n    };\r\n\r\n    // Function to set cache with expiration time\r\n    setCache = async (key: string, data: {} ) => {\r\n      try {\r\n        const ttl = 3600; // Cache expiration time in seconds\r\n        await RedisClient?.setEx(key, ttl, JSON.stringify(data)); // Cache data with expiration\r\n      } catch (err) {\r\n        console.error(\"Error setting cache:\", err);\r\n      }\r\n    };\r\n\r\n    \r\n    logger.info(\"Redis client successfully connected.\");\r\n    return { RedisClient, setCache };\r\n  } catch (e: any) {\r\n    logger.error(e, \"Redis Initialization Error\");\r\n  }\r\n}\r\n\r\n// Initialize Redis on startup\r\ninitializeRedis().catch((e) => logger.error(e, \"Failed to initialize Redis\"));\r\n\r\n// Export RedisClient and setCache to be used in other parts of the application\r\nexport { RedisClient, setCache };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAaA,0CA4DC;AAvED,mCAAgC;AAChC,IAAA,eAAM,GAAE,CAAC;AACT,iCAAsD;AACtD,uEAA+C;AAI/C,IAAI,WAA6C,CAAC;AAClD,IAAI,QAA0E,CAAC;AAG/E,SAAsB,eAAe;;QACnC,IAAI,CAAC;YAEH,gBAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAA;YAGzC,sBAAA,WAAW,GAAI,IAAA,oBAAY,EAAC;gBAC1B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,EAAE;gBAC1C,MAAM,EAAE;oBACJ,IAAI,EAAE,wDAAwD;oBAC9D,IAAI,EAAE,KAAK;iBACd;aACJ,CAAC,CAAC;YAGD,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC;YAC3E,WAAW,CAAC,EAAE,CAAC,YAAY,EAAC,GAAE,EAAE,GAAE,gBAAM,CAAC,IAAI,CAAC,0BAA0B,CAAE,CAAA,CAAA,CAAC,CAAC,CAAA;YAI5E,MAAM,WAAW,CAAC,OAAO,EAAE,CAAC;YAI5B,MAAM,eAAe,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;gBAChF,MAAM,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC;gBAE5B,IAAI,CAAC;oBAEH,MAAM,UAAU,GAAG,MAAM,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,CAAC,GAAG,CAAC,CAAA,CAAC;oBAE/C,IAAI,UAAU,EAAE,CAAC;wBAEf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;oBACtD,CAAC;yBAAM,CAAC;wBAEN,IAAI,EAAE,CAAC;oBACT,CAAC;gBACH,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACb,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;oBACzC,IAAI,EAAE,CAAC;gBACT,CAAC;YACH,CAAC,CAAA,CAAC;YAGF,mBAAA,QAAQ,GAAG,CAAO,GAAW,EAAE,IAAQ,EAAG,EAAE;gBAC1C,IAAI,CAAC;oBACH,MAAM,GAAG,GAAG,IAAI,CAAC;oBACjB,MAAM,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA,CAAC;gBAC3D,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACb,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC,CAAA,CAAC;YAGF,gBAAM,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;YACpD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;QACnC,CAAC;QAAC,OAAO,CAAM,EAAE,CAAC;YAChB,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAE,4BAA4B,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;CAAA;AAGD,eAAe,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAE,4BAA4B,CAAC,CAAC,CAAC","debug_id":"a9b23b8c-0373-578f-a1b3-70a99b577124"}