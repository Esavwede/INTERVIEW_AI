{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,uBAAqB;AAErB,kEAA0C;AAC1C,sDAA2B;AAC3B,+BAA2C;AAC3C,oEAA4C;AAC5C,uDAAqE;AACrE,wDAA+C;AAC/C,4CAA6C;AAI7C,IAAI,EAAE,GAAe,kBAAQ,CAAC,UAAU,CAAA;AAExC,SAAe,KAAK;;QAGd,IAAI,EAAE,GAAe,MAAM,IAAA,kCAAwB,GAAE,CAAA;QACrD,IAAA,qBAAW,EAAC,gBAAG,CAAC,CAAA;QAChB,MAAM,MAAM,GAAW,IAAA,mBAAY,EAAC,gBAAG,CAAC,CAAA;QACxC,MAAM,gBAAgB,GAAG,CAAC,kCAAkC,GAAG,iBAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxF,MAAM,CAAC,MAAM,CAAC,iBAAO,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,gBAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAGjE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAE,EAAE,GAAG,gBAAgB,EAAE,CAAA,CAAC,CAAC,CAAE,CAAA;QAClD,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,GAAE,EAAE,GAAE,gBAAgB,EAAE,CAAA,CAAC,CAAC,CAAE,CAAA;QAElD,SAAS,gBAAgB;YAE7B,IACA,CAAC;gBACG,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAA;gBAE7C,MAAM,CAAC,KAAK,CAAC,CAAE,CAAS,EAAE,EAAE;oBAExB,IAAI,CAAC,EACL,CAAC;wBACC,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAA;wBACtD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;oBAChB,CAAC;oBAGD,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAA;oBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;gBACnB,CAAC,CAAC,CAAA;YAGN,CAAC;YACD,OAAM,CAAC,EACP,CAAC;gBACC,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAA;gBAChE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAChB,CAAC;QACG,CAAC;IAEP,CAAC;CAAA;AAED,KAAK,EAAE,CAAA","sourcesContent":["import './pre-start'; // Must be the first import\r\n\r\nimport EnvVars from '@src/common/EnvVars';\r\nimport app from './server';\r\nimport { Server, createServer}  from \"http\" \r\nimport logger from './system/logger/logger';\r\nimport { createDatabaseConnection } from './system/database/connect';\r\nimport mongoose, { Connection } from \"mongoose\" \r\nimport { swaggerInit } from './util/swagger';\r\n\r\n\r\n// **** Run **** //\r\nvar db: Connection = mongoose.connection\r\n\r\nasync function start()\r\n{\r\n\r\n      var db: Connection = await createDatabaseConnection()\r\n      swaggerInit(app) \r\n      const server: Server = createServer(app)\r\n      const SERVER_START_MSG = ('Express server started on port: ' + EnvVars.Port.toString());\r\n      server.listen(EnvVars.Port, () => logger.info(SERVER_START_MSG)); \r\n\r\n\r\n      process.on(\"SIGINT\", ()=>{  gracefulShutdown() } ) \r\n      process.on(\"SIGTERM\", ()=>{ gracefulShutdown() } )\r\n\r\n      function gracefulShutdown()\r\n{\r\n  try \r\n  {\r\n      console.log(' Attempting Graceful Shutdown ')\r\n\r\n      server.close(( e?: Error )=>{\r\n\r\n          if( e )\r\n          {\r\n            console.log(\"Error occured while closing the server \")\r\n            console.log(e)\r\n          }\r\n\r\n          // Shut down other resources \r\n          console.log(\" Graceful Shutdown Successful \")\r\n          process.exit(0) \r\n      })\r\n\r\n\r\n  }\r\n  catch(e)\r\n  {\r\n    console.log(\"Error occured while attempting graceful shutdown \") \r\n    console.log(e)\r\n  }\r\n      }\r\n\r\n}\r\n\r\nstart()\r\n"]}