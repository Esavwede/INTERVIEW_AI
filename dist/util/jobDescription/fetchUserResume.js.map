{"version":3,"file":"fetchUserResume.js","sources":["util/jobDescription/fetchUserResume.ts"],"sourceRoot":"/","sourcesContent":["\r\n\r\nimport { config } from \"dotenv\"\r\nconfig() \r\nimport axios from \"axios\";\r\nimport pdfParse from \"pdf-parse\";\r\nimport mammoth from \"mammoth\";\r\nimport logger from \"@src/system/logger/logger\";\r\n\r\n\r\n\r\n// Function to fetch the document from Cloudinary\r\nexport async function fetchUserResumeAsText( resumeUrl: string ): Promise<string> \r\n{\r\n                try {\r\n               \r\n\r\n                logger.debug(\"Fetching Resume From Cloudinary\")\r\n\r\n                const username = process.env.CLOUDINARY_API_KEY || ''\r\n                const password = process.env.CLOUDINARY_API_SECRET || '' \r\n\r\n                const response = await axios({\r\n                    url: resumeUrl,\r\n                    method: 'GET',\r\n                    responseType: 'arraybuffer', // Get the document as a binary buffer\r\n                });\r\n      \r\n                // Get the content type of the document\r\n                const contentType = response.headers['content-type'];\r\n                const documentBuffer = response.data;\r\n            \r\n                // Process the document based on the content type\r\n                if (contentType === 'application/pdf') {\r\n                    // Handle PDF document\r\n                    return await handlePdfDocument(documentBuffer);\r\n                } else if (contentType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {\r\n                    // Handle DOCX document\r\n                    return await handleDocxDocument(documentBuffer);\r\n                } else {\r\n                    throw new Error(`Unsupported document type: ${contentType}`);\r\n                }\r\n        } catch (error) {\r\n          console.error('Error fetching or processing document:', error);\r\n          throw error;\r\n        }\r\n}\r\n\r\n// Function to handle PDF documents using pdf-parse\r\nconst handlePdfDocument = async (pdfBuffer: Buffer) => {\r\n  try {\r\n    const data = await pdfParse(pdfBuffer);\r\n    return data.text; // Extracted text from the PDF\r\n  } catch (error) {\r\n    console.error('Error processing PDF document:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to handle DOCX documents using mammoth\r\nconst handleDocxDocument = async (docxBuffer: Buffer) => {\r\n  try {\r\n    const result = await mammoth.extractRawText({ buffer: docxBuffer });\r\n    return result.value; // Extracted text from the DOCX\r\n  } catch (error) {\r\n    console.error('Error processing DOCX document:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAYA,sDAkCC;AA5CD,mCAA+B;AAC/B,IAAA,eAAM,GAAE,CAAA;AACR,kDAA0B;AAC1B,0DAAiC;AACjC,sDAA8B;AAC9B,uEAA+C;AAK/C,SAAsB,qBAAqB,CAAE,SAAiB;;QAE9C,IAAI,CAAC;YAGL,gBAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAA;YAE/C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,EAAE,CAAA;YACrD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,EAAE,CAAA;YAExD,MAAM,QAAQ,GAAG,MAAM,IAAA,eAAK,EAAC;gBACzB,GAAG,EAAE,SAAS;gBACd,MAAM,EAAE,KAAK;gBACb,YAAY,EAAE,aAAa;aAC9B,CAAC,CAAC;YAGH,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YACrD,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;YAGrC,IAAI,WAAW,KAAK,iBAAiB,EAAE,CAAC;gBAEpC,OAAO,MAAM,iBAAiB,CAAC,cAAc,CAAC,CAAC;YACnD,CAAC;iBAAM,IAAI,WAAW,KAAK,yEAAyE,EAAE,CAAC;gBAEnG,OAAO,MAAM,kBAAkB,CAAC,cAAc,CAAC,CAAC;YACpD,CAAC;iBAAM,CAAC;gBACJ,MAAM,IAAI,KAAK,CAAC,8BAA8B,WAAW,EAAE,CAAC,CAAC;YACjE,CAAC;QACT,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;YAC/D,MAAM,KAAK,CAAC;QACd,CAAC;IACT,CAAC;CAAA;AAGD,MAAM,iBAAiB,GAAG,CAAO,SAAiB,EAAE,EAAE;IACpD,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,IAAA,mBAAQ,EAAC,SAAS,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC;AAGF,MAAM,kBAAkB,GAAG,CAAO,UAAkB,EAAE,EAAE;IACtD,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,iBAAO,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QACpE,OAAO,MAAM,CAAC,KAAK,CAAC;IACtB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACxD,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC","debug_id":"031f713d-f006-5e82-9d48-f0420429285d"}