{"version":3,"file":"index.js","sourceRoot":"/","sources":["routes/user/index.ts"],"names":[],"mappings":";;;;;AAYA,gCAuBC;AAnCD,qCAAgC;AAEhC,wEAA+C;AAC/C,iEAAkI;AAClI,oDAA0D;AAC1D,kGAA8F;AAC9F,iFAAsF;AACtF,kDAA4D;AAC5D,wCAAsC;AAEtC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAA;AAEvB,SAAgB,UAAU,CAAE,GAAY;IAGpC,MAAM,cAAc,GAAG,IAAI,qBAAc,EAAE,CAAA;IAE3C,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAA,6CAAqB,EAAE,2BAAY,CAAE,EAAE,cAAc,CAAC,MAAM,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAA;IAE5G,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,MAAM,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAA;IAErE,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE,6BAAoB,EAAE,IAAA,6CAAqB,EAAE,uDAAwC,CAAE,EAAE,cAAc,CAAC,MAAM,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAA;IAErK,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAA,6CAAqB,EAAE,yCAA0B,CAAE,EAAE,cAAc,CAAC,UAAU,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAA;IAEnI,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAG,6BAAoB,EAAE,cAAc,CAAC,cAAc,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAA;IAE9G,MAAM,CAAC,KAAK,CAAC,aAAa,EAAG,6BAAoB,EAAE,IAAA,6CAAqB,EAAE,8CAA0B,CAAE,EAAC,cAAc,CAAC,+BAA+B,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAA;IAE9K,GAAG,CAAC,GAAG,CAAC,uBAAuB,EAAE,iBAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAA;IAE9I,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,IAAA,6CAAqB,EAAE,8CAA0B,CAAE,EAAE,cAAc,CAAC,+BAA+B,CAAC,IAAI,CAAE,cAAc,CAAC,CAAC,CAAA;IAE5J,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAE,CAAA;IAC3B,gBAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;AACtC,CAAC","sourcesContent":["import { Router } from \"express\"\r\nimport { Express } from \"express-serve-static-core\" \r\nimport logger from \"../../system/logger/logger\" \r\nimport { SaveUserFirstAndLastNameValidationSchema, SignupSchema, VerifyUserValidationSchema} from \"@src/schemas/user/signupSchema\"\r\nimport { UserController } from \"@src/controller/user/user\"\r\nimport { validateRequestSchema } from \"@src/middleware/validate/request/validateRequestSchema\"\r\nimport { OnboardingValidationSchema } from \"@src/schemas/onboarding/onboarding.schema\"\r\nimport { validateRequestToken } from \"@src/util/Auth/tokens\"\r\nimport { passport } from \"@src/server\"\r\n\r\nconst router = Router() \r\n\r\nexport function userRoutes( app: Express )\r\n{\r\n\r\n    const userController = new UserController() \r\n\r\n    router.post('/signup', validateRequestSchema( SignupSchema ), userController.signup.bind( userController ) )\r\n\r\n    router.post('/signin', userController.signin.bind( userController ) ) \r\n\r\n    router.patch('/users/update', validateRequestToken, validateRequestSchema( SaveUserFirstAndLastNameValidationSchema ), userController.update.bind( userController ) )\r\n      \r\n    router.get('/users/verify', validateRequestSchema( VerifyUserValidationSchema ) ,userController.verifyUser.bind( userController ) ) \r\n\r\n    router.patch('/onboarding/skip' , validateRequestToken, userController.skipOnboarding.bind( userController ) )     \r\n\r\n    router.patch('/onboarding' , validateRequestToken, validateRequestSchema( OnboardingValidationSchema ),userController.addLearningModulesToUserProfile.bind( userController ) ) \r\n    \r\n    app.get('/auth/google/callback', passport.authenticate('google', { session: false }), userController.signinWithGoogle.bind( userController ) )\r\n\r\n    router.patch('/learning-profile', validateRequestSchema( OnboardingValidationSchema ), userController.addLearningModulesToUserProfile.bind( userController))\r\n\r\n    app.use('/api/v1', router )\r\n    logger.info(\"User Routes Created\")\r\n}\r\n\r\n"]}