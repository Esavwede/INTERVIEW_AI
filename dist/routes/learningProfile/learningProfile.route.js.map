{"version":3,"file":"learningProfile.route.js","sourceRoot":"/","sources":["routes/learningProfile/learningProfile.route.ts"],"names":[],"mappings":";;;;;AAeA,sDAmHC;AA5HD,qCAAgC;AAChC,uEAA8C;AAC9C,kGAA8F;AAC9F,qFAA2F;AAC3F,gGAA2G;AAG3G,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAA;AAEvB,SAAgB,qBAAqB,CAAC,GAAY;IAE9C,IACA,CAAC;QAEG,MAAM,yBAAyB,GAAG,IAAI,2CAAyB,EAAE,CAAA;QAmGjE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAA,6CAAqB,EAAE,8DAAqC,CAAE,EAAE,yBAAyB,CAAC,MAAM,CAAC,IAAI,CAAE,yBAAyB,CAAE,CAAE,CAAA;QAErJ,GAAG,CAAC,GAAG,CAAC,0BAA0B,EAAE,MAAM,CAAE,CAAA;QAE5C,gBAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAA;IAEhD,CAAC;IACD,OAAM,CAAM,EACZ,CAAC;QACG,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,8BAA8B,CAAC,CAAA;IAClD,CAAC;AACL,CAAC","sourcesContent":["\r\n\r\n\r\n\r\n\r\nimport {  Express } from \"express-serve-static-core\"\r\nimport { Router } from \"express\"\r\nimport logger from \"@src/system/logger/logger\"\r\nimport { validateRequestSchema } from \"@src/middleware/validate/request/validateRequestSchema\"\r\nimport { LearningProfileController } from \"@src/controller/learningProfile/learningProfile\"\r\nimport { CreateLearningProfileValidationSchema } from \"@src/schemas/learningProfile/learningProfile.schema\"\r\n\r\n\r\nconst router = Router() \r\n\r\nexport function learningProfileRoutes(app: Express )\r\n{\r\n    try \r\n    {\r\n\r\n        const learningProfileController = new LearningProfileController() \r\n\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/learning/profile/:\r\n *   post:\r\n *     summary: Create a Learning Profile\r\n *     description: Creates a new learning profile with optional learning modules.\r\n *     tags:\r\n *       - Onboarding\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - userId\r\n *               - learningModules.moduleId\r\n *               - learningModules.stage\r\n *               - learningModules.title\r\n *               - learningModules.description\r\n *             properties:\r\n *               userId:\r\n *                 type: string\r\n *                 description: \"User ID for the learning profile.\"\r\n *                 example: \"66dfe96127616c75304ba094\"\r\n *               learningModules:\r\n *                 type: array\r\n *                 description: \"An optional array of learning modules.\"\r\n *                 items:\r\n *                   type: object\r\n *                   properties:\r\n *                     moduleId:\r\n *                       type: string\r\n *                       description: \"Learning module ID.\"\r\n *                       example: \"66df594cf6590cb38d5f8c07\"\r\n *                     stage:\r\n *                       type: string\r\n *                       description: \"Learning module stage ID.\"\r\n *                       example: \"beginner\"\r\n *                     title:\r\n *                       type: string\r\n *                       description: \"Title of the learning module.\"\r\n *                       example: \"Introduction to JavaScript\"\r\n *                     description:\r\n *                       type: string\r\n *                       description: \"Description of the learning module.\"\r\n *                       example: \"This module covers the basics of JavaScript.\"\r\n *     responses:\r\n *       409:\r\n *         description: \"USER LEARNING PROFILE ALREADY EXISTS \"\r\n *       201:\r\n *         description: \"Learning profile created successfully.\"\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: true\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"Learning profile created.\"\r\n *                 data:\r\n *                   type: object\r\n *                   description: \"The created learning profile data.\"\r\n *       400:\r\n *         description: \"Bad request, invalid or missing input.\"\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: false\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"Invalid request body.\"\r\n *       500:\r\n *         description: \"Internal server error.\"\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: false\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"An error occurred while creating the learning profile.\"\r\n */\r\n\r\n    \r\n        // Create Learning Profile \r\n        router.post('/', validateRequestSchema( CreateLearningProfileValidationSchema ), learningProfileController.create.bind( learningProfileController ) )\r\n\r\n        app.use('/api/v1/learning/profile', router )\r\n\r\n        logger.info(\"Learning Profile Routes Built\")\r\n\r\n    }\r\n    catch(e: any)\r\n    {\r\n        logger.error(e,\"Learning Profile ROUTE ERROR\") \r\n    }\r\n}"]}