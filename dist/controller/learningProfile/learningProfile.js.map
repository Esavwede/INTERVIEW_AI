{"version":3,"file":"learningProfile.js","sourceRoot":"/","sources":["controller/learningProfile/learningProfile.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA,2FAAsF;AAEtF,mGAA8F;AAK9F,MAAa,yBAAyB;IAKlC;QAEI,MAAM,mBAAmB,GAAG,IAAI,0CAAmB,EAAE,CAAA;QACrD,IAAI,CAAC,sBAAsB,GAAG,IAAI,gDAAsB,CAAE,mBAAmB,CAAE,CAAA;IACnF,CAAC;IAGK,MAAM,CAAE,GAAyD,EAAE,GAAa;;YAElF,IACA,CAAC;gBACG,MAAM,IAAI,GAAG,GAAG,CAAC,IAA8D,CAAA;gBAC/E,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAA;gBAEvB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAE,MAAM,CAAE,CAAA;gBAEtE,IAAI,UAAU,EACd,CAAC;oBACG,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAC,sCAAsC,EAAC,CAAC,CAAA;gBAC9F,CAAC;gBAED,MAAM,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAE,IAAI,CAAE,CAAA;gBAChD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAC,uCAAuC,EAAC,CAAC,CAAA;YAC9F,CAAC;YACD,OAAM,CAAM,EACZ,CAAC;gBACG,OAAO,GAAG,CAAC,MAAM,CAAE,CAAC,CAAC,UAAU,CAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;YAC9E,CAAC;QACL,CAAC;KAAA;CAGJ;AApCD,8DAoCC","sourcesContent":["\r\n\r\nimport { ILearningProfile } from \"@src/models/learningProfile\"\r\nimport { LearningProfileRepo } from \"@src/repos/learnningProfile/learningProfile.repo\"\r\nimport { CreateLearningProfileSchema  } from \"@src/schemas/learningProfile/learningProfile.schema\"\r\nimport { LearningProfileService } from \"@src/services/learningProfile/learningProfile.service\"\r\nimport { Response, Request} from \"express-serve-static-core\"\r\n\r\n\r\n\r\nexport class LearningProfileController \r\n{\r\n\r\n    private learningProfileService \r\n\r\n    constructor()\r\n    {\r\n        const learningProfileRepo = new LearningProfileRepo() \r\n        this.learningProfileService = new LearningProfileService( learningProfileRepo ) \r\n    }\r\n\r\n\r\n    async create( req: Request<{},{}, CreateLearningProfileSchema['body'] >, res: Response)\r\n    {\r\n        try \r\n        {\r\n            const body = req.body as Pick< ILearningProfile , 'userId' | 'learningModules'> \r\n            const { userId } = body \r\n\r\n            const userExists = await this.learningProfileService.findOne( userId )\r\n\r\n            if( userExists )\r\n            {\r\n                return res.status(409).json({ success: false, msg:\"USER LEARNING PROFILE ALREADY EXISTS\"})\r\n            }\r\n            \r\n            await this.learningProfileService.create( body ) \r\n            return res.status(201).json({ success: true, msg:\"LEARNING PROFILE CREATED SUCCESSFULLY\"})\r\n        }\r\n        catch(e: any) \r\n        {\r\n            return res.status( e.statusCode ).json({ success: false, msg: e.message })\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"]}