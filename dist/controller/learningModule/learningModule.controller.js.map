{"version":3,"file":"learningModule.controller.js","sources":["controller/learningModule/learningModule.controller.ts"],"sourceRoot":"/","sourcesContent":["\r\nimport { Request, Response } from \"express-serve-static-core\"\r\nimport { LearningModuleService } from \"@src/services/LearningModule/learningModule.service\";\r\nimport LearningModuleRepo from \"@src/repos/LearningModule/learningModule.repo\";\r\nimport logger from \"@src/system/logger/logger\";\r\nimport { CreateLearningModuleSchema, DeleteLearningModule, GetLearningModulePartSchema, GetLearningModulesUnderStageSchema, PublishLearningModuleSchema, UpdateLearningModuleInput  } from \"@src/schemas/learningModule/learningModule.schema\";\r\nimport { NotFoundError } from \"@src/util/Errors/Endpoints/notFoundError\";\r\nimport { ILearningModule } from \"@src/models/LearningModule\";\r\nimport { IUpdateLearningModuleDTO } from \"@src/DTOs/learningModule/learningModule.dto\";\r\nimport { AnyAppError } from \"@src/util/Errors/Endpoints/anyAppError\";\r\n\r\n\r\nexport class LearningModuleController \r\n{\r\n\r\n    private learningModuleService \r\n\r\n    constructor( )\r\n    {\r\n        const learningModuleRepo = new LearningModuleRepo() \r\n        this.learningModuleService = new LearningModuleService( learningModuleRepo ) \r\n    }\r\n\r\n    async create(req: Request<{},{}, CreateLearningModuleSchema['body']>, res: Response)\r\n    {\r\n        try \r\n        {\r\n\r\n            logger.info(\"Creating Learning Module\") \r\n\r\n            const body = req.body as any as Pick< ILearningModule , 'title' | 'description' | 'area' | 'stage' | 'imgSrc' | 'isDraft' >\r\n            const newLearningModule = await this.learningModuleService.create( body )\r\n\r\n            if( !newLearningModule )\r\n            {\r\n                return res.status(500).json({ success: false, msg:\"SERVER ERROR\" })\r\n            }\r\n\r\n            return res.status(201).json({ success: true, msg:\"Learning MODULE CREATED\", data: newLearningModule  })\r\n        }\r\n        catch(e: any)\r\n        {\r\n            logger.error(e)\r\n            return res.status(500).json({ success: false, msg:\"SERVER ERROR\"})\r\n        }\r\n    }\r\n\r\n    async get(req: Request, res: Response)\r\n    {\r\n        try \r\n        {\r\n\r\n            logger.info(\"Fetching Learning Module\") \r\n\r\n            const learningModule = await this.learningModuleService.get( req.params.id )\r\n\r\n            if( ! learningModule )\r\n            {\r\n                return res.status(404).json({ success: false, msg:\"SERVER ERROR\" })\r\n            }\r\n\r\n            return res.status(200).json({ success: true, msg:\"Learning MODULE FETCHED\", data: learningModule  })\r\n        }\r\n        catch(e: any)\r\n        {\r\n            logger.error(e)\r\n            return res.status(500).json({ success: false, msg:\"SERVER ERROR\"})\r\n        }\r\n    }\r\n\r\n\r\n    async getLearningModulesUnderStage(\r\n        req: Request<   {}, {}, {},  GetLearningModulesUnderStageSchema['query'] >, \r\n        res: Response )\r\n    {\r\n        try \r\n        {\r\n            const stageId = req.query.stageId \r\n            const page = Number( req.query.page ) \r\n            const limit = Number( req.query.limit ) \r\n\r\n            if( page <= 0 ) return res.status(400).json({ success: false, msg:\"Page cannot be less than 1\"})\r\n            if( limit <= 0 ) return res.status(400).json({ success: false, msg:\"limit cannot be less than 1\"})\r\n\r\n            const learningModules = await this.learningModuleService.getLearningModulesUnderStage( stageId, page, limit )\r\n            return res.status(200).json({ success: true, data:{ learningModules }})\r\n        }\r\n        catch(e: any)\r\n        {\r\n            return res.status(500).json({ success: false, msg: \"Server Error\" })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    async update( req: Request<UpdateLearningModuleInput['params'], {}, UpdateLearningModuleInput['body'] >, res: Response )\r\n    {\r\n        try \r\n        {\r\n            \r\n            const learningModuleId = req.params.id\r\n            const updateBody = req.body as any as IUpdateLearningModuleDTO \r\n\r\n            await this.learningModuleService.update(  learningModuleId, updateBody )\r\n\r\n            logger.info(\"Learning Module Updated\") \r\n            \r\n            return res.status(200).json({ success: true, msg:\"LEARNING MODULE UPDATED\" })\r\n        }\r\n        catch(e: any )\r\n        {\r\n            if( e instanceof NotFoundError )\r\n            {\r\n                return res.status( e.statusCode ).json({ success: false, msg: e.message })\r\n            } \r\n\r\n                return res.status(500).json({ success: false, msg:\"SERVER ERROR\"})\r\n        }\r\n    }\r\n\r\n    async publish( req: Request< PublishLearningModuleSchema['params'],{}, PublishLearningModuleSchema['body']>, res: Response )\r\n    {\r\n        try \r\n        {\r\n            logger.info(`Controller: ublishing Learning Module`)\r\n            const moduleId = req.params.id \r\n            const moduleContent = req.body as any as Pick< ILearningModule,'title' | 'area' | 'stage' | 'description' | 'imgSrc' | 'totalParts' | 'isDraft' >\r\n            await this.learningModuleService.publish( moduleId,  moduleContent)\r\n            return res.status(200).json({ success: true, msg:\"Learning Module Publish Successfully\"})\r\n        }\r\n        catch(e: any )\r\n        {\r\n            const err = e as AnyAppError \r\n\r\n            logger.error( err, \"--Debug--\") \r\n\r\n            if( !err.statusCode ) return res.status(500).json({ success: false, msg: \"Server Error\" })\r\n            \r\n            return res.status( err.statusCode ).json({ success: false, msg: err.message })\r\n        }\r\n    }\r\n\r\n    async delete( req: Request<DeleteLearningModule[\"params\"]>, res: Response )\r\n    {\r\n        try \r\n        {\r\n            await this.learningModuleService.delete( req.params.id ) \r\n\r\n            return res.status(200).json({ success: true, msg:\"Successfully Deleted Learning Module\"})\r\n        }\r\n        catch(e: any )\r\n        {\r\n\r\n            if( e instanceof NotFoundError )\r\n            {\r\n                return res.status( e.statusCode ).json({ success: false, msg: e.message })\r\n            }\r\n\r\n                return res.status(500).json({ success: false, msg: e.message })\r\n        }\r\n    }\r\n\r\n    async getPart(req: Request<GetLearningModulePartSchema['params'],{},{},GetLearningModulePartSchema['query']>, res: Response )\r\n    {\r\n        try \r\n        {\r\n            const userId =  req.user?._id \r\n            if( !userId ){ return res.status(400).json({ success: false, msg:\"could not authenticate user\"})}\r\n\r\n            const learningModuleId = req.params.moduleId\r\n            const partNumber = Number( req.params.partNumber )\r\n            const totalParts = Number( req.query.totalParts  )\r\n\r\n            // learningModuleId \r\n            const part = await this.learningModuleService.getPart( userId, learningModuleId, partNumber, totalParts ) \r\n            return res.status(200).json({ success: true, data: { part} }) \r\n\r\n        }\r\n        catch(e: any )\r\n        {\r\n            const err = e as AnyAppError \r\n\r\n            if( !err.statusCode ) return res.status(500).json({ success: false, msg: \"Server Error\"})\r\n\r\n            return res.status( err.statusCode ).json({ success: false, msg: err.message })\r\n        }\r\n    }\r\n    \r\n\r\n}\r\n"],"names":[],"mappings":"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","debug_id":"72803402-4fd7-56e9-8ce2-528b6c04a2c7"}