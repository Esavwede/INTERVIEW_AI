{"version":3,"file":"learningArea.service.js","sources":["services/learningArea/learningArea.service.ts"],"sourceRoot":"/","sourcesContent":["import { LearningAreaRepo } from \"@src/repos/learningAreas/learningAreas.repo\";\r\nimport { ServerError } from \"@src/util/Errors/Endpoints/serverError\";\r\nimport logger from \"@src/system/logger/logger\";\r\nimport { Server } from \"http\";\r\nimport { NotFoundError } from \"@src/util/Errors/Endpoints/notFoundError\";\r\nimport { ObjectId } from \"mongoose\"\r\n\r\nexport class LearningAreaService \r\n{\r\n\r\n    \r\n    constructor( private learningAreaRepository: LearningAreaRepo )\r\n    {\r\n\r\n    }\r\n\r\n    async create( learningAreaDoc: { area: string } ): Promise< void > \r\n    {\r\n        try \r\n        {\r\n          logger.info(\"SERVICE: Creating Learning Area\") \r\n          await this.learningAreaRepository.create( learningAreaDoc )   \r\n          logger.info(\"SERVICE: Learning Area Created\")\r\n        }\r\n        catch(e: any) \r\n        {\r\n            logger.error(e,\"SERVICE: Error Occured While Creating Learning Area\")\r\n            throw new ServerError(\" Server Encountered Error While Creating Learning Area\")\r\n        }\r\n    }\r\n\r\n    async getAll()\r\n    {\r\n        try \r\n        {\r\n            const learningAreas = await this.learningAreaRepository.getAll() \r\n            return learningAreas \r\n        }   \r\n        catch(e: any )\r\n        {\r\n            logger.error(e,`SERVICE: Error Occured While Fetching Service Areas `)\r\n            throw new ServerError(`SERVICE: Error Occured While Fetching Service Areas `)\r\n        }\r\n    }\r\n\r\n\r\n    async delete( learningAreaId: string ) \r\n    {\r\n        try \r\n        {\r\n            const deleteCount = await this.learningAreaRepository.delete( learningAreaId ) \r\n\r\n            if( deleteCount !== 1 )\r\n            {\r\n                logger.error(`SERVICE: Could not find Area with ID:${ learningAreaId } to delete `)\r\n                throw new NotFoundError(`SERVICE: Could not find Area with ID:${ learningAreaId } to delete `)\r\n            }\r\n        }\r\n        catch(e: any) \r\n        {\r\n            if( e instanceof NotFoundError )\r\n            {\r\n                throw e \r\n            }\r\n\r\n            logger.error(e,`SERVICE: Error Occured While Deleting Area With ID: ${ learningAreaId }`)\r\n            throw new ServerError(`SERVICE: Error Occured While Deleting Area With ID: ${ learningAreaId }`)\r\n        }\r\n    }\r\n\r\n\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA,wEAAqE;AACrE,uEAA+C;AAE/C,4EAAyE;AAGzE,MAAa,mBAAmB;IAI5B,YAAqB,sBAAwC;QAAxC,2BAAsB,GAAtB,sBAAsB,CAAkB;IAG7D,CAAC;IAEK,MAAM,CAAE,eAAiC;;YAE3C,IACA,CAAC;gBACC,gBAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAA;gBAC9C,MAAM,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAE,eAAe,CAAE,CAAA;gBAC3D,gBAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAA;YAC/C,CAAC;YACD,OAAM,CAAM,EACZ,CAAC;gBACG,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,qDAAqD,CAAC,CAAA;gBACrE,MAAM,IAAI,yBAAW,CAAC,wDAAwD,CAAC,CAAA;YACnF,CAAC;QACL,CAAC;KAAA;IAEK,MAAM;;YAER,IACA,CAAC;gBACG,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAA;gBAChE,OAAO,aAAa,CAAA;YACxB,CAAC;YACD,OAAM,CAAM,EACZ,CAAC;gBACG,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,sDAAsD,CAAC,CAAA;gBACtE,MAAM,IAAI,yBAAW,CAAC,sDAAsD,CAAC,CAAA;YACjF,CAAC;QACL,CAAC;KAAA;IAGK,MAAM,CAAE,cAAsB;;YAEhC,IACA,CAAC;gBACG,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAE,cAAc,CAAE,CAAA;gBAE9E,IAAI,WAAW,KAAK,CAAC,EACrB,CAAC;oBACG,gBAAM,CAAC,KAAK,CAAC,wCAAyC,cAAe,aAAa,CAAC,CAAA;oBACnF,MAAM,IAAI,6BAAa,CAAC,wCAAyC,cAAe,aAAa,CAAC,CAAA;gBAClG,CAAC;YACL,CAAC;YACD,OAAM,CAAM,EACZ,CAAC;gBACG,IAAI,CAAC,YAAY,6BAAa,EAC9B,CAAC;oBACG,MAAM,CAAC,CAAA;gBACX,CAAC;gBAED,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,uDAAwD,cAAe,EAAE,CAAC,CAAA;gBACzF,MAAM,IAAI,yBAAW,CAAC,uDAAwD,cAAe,EAAE,CAAC,CAAA;YACpG,CAAC;QACL,CAAC;KAAA;CAGJ;AAhED,kDAgEC","debug_id":"07ca6553-769c-5af7-a17f-c62b7c70f31c"}