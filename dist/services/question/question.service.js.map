{"version":3,"file":"question.service.js","sourceRoot":"/","sources":["services/question/question.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,wEAAqE;AACrE,uEAA+C;AAG/C,MAAa,eAAe;IAExB,YAAqB,kBAAgC;QAAhC,uBAAkB,GAAlB,kBAAkB,CAAc;IAGrD,CAAC;IAGK,MAAM,CAAE,SAA6B;;YAEvC,IACA,CAAC;gBAEG,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAE,SAAS,CAAE,CAAA;gBAE1E,IAAI,WAAW,GAAa,EAAE,CAAA;gBAE9B,gBAAgB,CAAC,OAAO,CAAE,QAAQ,CAAC,EAAE;oBACjC,WAAW,CAAC,IAAI,CAAE,QAAQ,CAAC,EAAE,CAAE,CAAA;gBACnC,CAAC,CAAC,CAAC;gBAEH,OAAO,WAAW,CAAA;YACtB,CAAC;YACD,OAAM,CAAM,EACZ,CAAC;gBACG,gBAAM,CAAC,KAAK,CAAC,CAAC,EAAC,oDAAoD,CAAC,CAAA;gBACpE,MAAM,IAAI,yBAAW,CAAC,mCAAmC,CAAC,CAAA;YAC9D,CAAC;QACL,CAAC;KAAA;CAEJ;AA9BD,0CA8BC","sourcesContent":["import { IQuestionDTO_Req, IQuestionDTO_Res } from \"@src/DTOs/question/question.dto\";\r\nimport { QuestionRepo } from \"@src/repos/question/question.repo\";\r\nimport { ServerError } from \"@src/util/Errors/Endpoints/serverError\";\r\nimport logger from \"@src/system/logger/logger\";\r\n\r\n\r\nexport class QuestionService \r\n{\r\n    constructor( private questionRepository: QuestionRepo )\r\n    {\r\n        \r\n    }\r\n\r\n\r\n    async create( questions: IQuestionDTO_Req[] ): Promise< string[] > \r\n    {\r\n        try \r\n        {\r\n\r\n            const createdQuestions = await this.questionRepository.create( questions )\r\n\r\n            var questionIds: string[] = [] \r\n    \r\n            createdQuestions.forEach( question => {\r\n                questionIds.push( question.id ) \r\n            });\r\n\r\n            return questionIds \r\n        }\r\n        catch(e: any )\r\n        {\r\n            logger.error(e,\"SERVICE: ERROR OCCURED WHILE ADDING QUIZ QUESTIONS\")\r\n            throw new ServerError(\"ERROR OCCURED WHILE CREATING QUIZ\")\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n"]}