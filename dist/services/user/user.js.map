{"version":3,"file":"user.js","sources":["services/user/user.ts"],"sourceRoot":"/","sourcesContent":["\r\n\r\nimport { UserRepository } from \"@src/repos/user/user.repo\";\r\nimport { UserDTO } from \"@src/DTOs/user/user\";\r\nimport { sendMail } from \"@src/util/mail/sendMain\";\r\nimport { ServerError } from \"@src/util/Errors/Endpoints/serverError\";\r\nimport  logger from \"@src/system/logger/logger\";\r\nimport { config } from \"dotenv\"\r\nimport { UnauthorizedError } from \"@src/util/Errors/Endpoints/unauthorizedError\";\r\nimport { NotFoundError } from \"@src/util/Errors/Endpoints/notFoundError\";\r\nimport { generateJwtToken } from \"@src/util/Auth/tokens\";\r\nimport { LearningArea } from \"@src/models/area\";\r\nimport { groupLearningAreasByStage } from \"@src/util/learningModule/organizeLearningModules\";\r\nimport { ILearningModuleOverview } from \"@src/models/learningProfile\";\r\nimport { ForbiddenError } from \"@src/util/Errors/Endpoints/forbiddenError\";\r\nimport { IUser } from \"@src/models/User\";\r\nconfig() \r\n\r\n\r\nexport class UserService \r\n{\r\n    \r\n    constructor( private userRepository: UserRepository)\r\n    {\r\n        \r\n    }\r\n\r\n\r\n    async create( user:  UserDTO, domain: string  ): Promise< void >\r\n    {\r\n       try \r\n       {\r\n           \r\n            const newUser: { _id: string } = await this.userRepository.create( user ) \r\n\r\n            // Email Verification Link \r\n            const verificationLink = `${domain}/api/v1/users/verify?token=${ newUser._id}`\r\n\r\n            // User Email \r\n            const { email } = user \r\n\r\n            const htmlBody = `<!DOCTYPE html>\r\n                                <html>\r\n                                <head>\r\n                                    <meta charset=\"UTF-8\">\r\n                                    <title>Email Verification</title>\r\n                                </head>\r\n                                <body>\r\n                                    <p>Welcome to Interview AI!</p>\r\n                                    <p>Please click the link below to verify your email address:</p>\r\n                                    <p><a href=\"${ verificationLink }\" style=\"color: #1a0dab; text-decoration: underline;\" target=\"_blank\">Verify Email</a></p>\r\n                                    <p>If you did not request this verification, please ignore this email.</p>\r\n                                </body>\r\n                                </html>\r\n                                `\r\n\r\n            const mailOptions = \r\n            {\r\n                email, \r\n                subject: 'Welcome To Interview AI',\r\n                text: 'Welcome to InterviewAI. Please visit here to verify',\r\n                html:  htmlBody \r\n            }\r\n            \r\n            await sendMail( mailOptions ) \r\n\r\n       }\r\n       catch(e)\r\n       {\r\n            logger.error(e,`User_Service: Error occured while creating New User `)\r\n            throw new ServerError( e.message ) \r\n       }\r\n    }\r\n\r\n\r\n    async findByEmail( email: string ): Promise< IUser | null > \r\n    {\r\n       try \r\n       {\r\n            logger.info(`User_Service: Finding User By Email ${ email }`)\r\n            return await this.userRepository.findByEmail( email ) \r\n       }\r\n       catch(e: any)\r\n       {\r\n            logger.error(e,`User_Service: Error Occured While Finding User By Email: ${ email }`)\r\n            throw e \r\n       }\r\n    }\r\n\r\n\r\n    async update( userId: string, updateBody: Partial< Pick< IUser, 'firstname' | 'lastname' | 'email' > > ): Promise<void> \r\n    {\r\n        try \r\n        {\r\n            const updateResult = await this.userRepository.update( userId, updateBody ) \r\n\r\n            if( !updateResult ){ throw new ServerError(\"Server Could Not Update User: \" + userId ) }\r\n        }\r\n        catch(e: any )\r\n        {\r\n            logger.error(e,`USER_SERVICE_ERROR: Error Occured while Saving Updating User: ${ userId }  `)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    async verifyUser( userID: string )\r\n    {\r\n        try \r\n        {\r\n            const user = await this.userRepository.findById( userID ) \r\n\r\n            if( !user )\r\n            {\r\n                logger.error(`Could not find user with ID: ${ userID } from Validation `)\r\n                return new UnauthorizedError(\"Invalid Validation Link\")\r\n            }\r\n\r\n            // Update User \r\n            user.isVerified = true \r\n            user.markModified(\"isVerfied\")\r\n            await user.save() \r\n            \r\n            return \r\n        }\r\n        catch(e)\r\n        {\r\n            if( e instanceof UnauthorizedError )\r\n            {\r\n                throw e \r\n            }\r\n\r\n            logger.error(e,'SERVICE: Error Occured while finding user by Id ') \r\n            throw new ServerError(\"Error Occured While Finding User By Id \") \r\n        }\r\n    }\r\n\r\n    async signin( email: string, password: string  )\r\n    {   \r\n        try \r\n        {\r\n    \r\n            const user = await this.findByEmail( email ) \r\n\r\n            if( !user ) throw new UnauthorizedError(`CHECK SIGNIN DETAILS`)\r\n\r\n                logger.info(\"User:\")\r\n                logger.info( String( user._id ) ) \r\n\r\n            if( !user.isVerified ) throw new ForbiddenError(`EMAIL NOT VERIFIED`)\r\n\r\n\r\n             const passwordValid = await user.comparePassword( password )\r\n             if( !passwordValid ) throw new UnauthorizedError(\"Password Invalid\")\r\n\r\n\r\n             const accessToken = generateJwtToken( user.toObject() )\r\n             const refreshToken = generateJwtToken( user.toObject() )\r\n            \r\n             const { _id, firstname, lastname, learningProfile, newUser } = user \r\n\r\n\r\n             if( newUser ) \r\n             {\r\n\r\n                    logger.info(\"User New\")\r\n                    // Fetch Learning Areas \r\n                    const learningModules = await LearningArea.find({})\r\n                    // \r\n\r\n                    const learningModulesGroupedByStage = groupLearningAreasByStage( learningModules )\r\n                    console.dir( learningModulesGroupedByStage ) \r\n                    \r\n                    return { success: true, data:{ user:{  newUser: true, firstname, lastname }, tokens:{ accessToken, refreshToken}, learningModules: learningModulesGroupedByStage } }  \r\n                     \r\n             }\r\n          \r\n             // User not New Return User profile and Learning Profile Details\r\n             logger.info('User Not New')\r\n             return { data:{   user:{  newUser: false, userId: _id, firstname, lastname, learningProfile}, tokens:{ accessToken, refreshToken }}}\r\n        }\r\n        catch(e: any )\r\n        {\r\n                logger.error(e,\"Service: Signin\")\r\n                throw e \r\n        }\r\n    }\r\n\r\n    async setUserNewToFalse( userID: string ): Promise<void> \r\n    {\r\n        try \r\n        {\r\n            const done = await this.userRepository.setUserNewToFalse( userID )\r\n\r\n            if( !done )\r\n            {\r\n                logger.error(`User_Service: User with Id: ${ userID } not Found While trying to update Skip Onboarding `)\r\n                throw new NotFoundError(\"User Not Found\")\r\n            }\r\n\r\n        }\r\n        catch(e) \r\n        {\r\n            logger.error(`Error Occured while Skipping User onboarding for user: ${ userID } `)\r\n            throw new ServerError(\"Server Error\")\r\n        }\r\n    }\r\n\r\n    async saveUserLearningModuleOverview( userID: string, learningModuleOverviewArray: ILearningModuleOverview[] ):Promise<void> \r\n    {\r\n        try \r\n        {\r\n            const saved = await this.userRepository.saveLearningModuleOverview( userID, learningModuleOverviewArray )\r\n\r\n            if( !saved )\r\n            {\r\n                logger.error(`Could not find User with id: ${ userID } to save Learning Summaries `)\r\n                throw new NotFoundError(`Could Not Find User Learning Profile with UserId ${ userID }`)\r\n            }\r\n\r\n            logger.info( saved ) \r\n        }\r\n        catch(e: any )\r\n        {\r\n            if( e instanceof NotFoundError )\r\n            {\r\n                throw e \r\n            }\r\n                logger.error(e,\"Error Occured while Updating User Learning Overview\")\r\n                throw new ServerError('SERVER ERROR')\r\n        }\r\n    }\r\n    \r\n    async getLearningModuleOverview( userId: string, moduleId: string ): Promise<ILearningModuleOverview | null > \r\n    {\r\n        try \r\n        {\r\n            const learningModuleOverview = await this.userRepository.getLearningModuleOverview( userId, moduleId ) \r\n            return learningModuleOverview \r\n        }\r\n        catch(e: any )\r\n        {\r\n            logger.error(e,'User Service: Error Occured While Getting User Learning Profile') \r\n            throw e \r\n        }\r\n    }\r\n\r\n    async updateLearningModuleCurrentPart(userId: string, moduleId: string, currentPartIndex: number  )\r\n    {\r\n        try \r\n        {       \r\n            await this.userRepository.updateLearningModuleCurrentPart(userId, moduleId, currentPartIndex )\r\n        }\r\n        catch(e: any)\r\n        {\r\n            logger.error(e,`User Service Error: Error Occured While Updating User Learning Module Current Stage `)\r\n            throw e \r\n        }\r\n    }\r\n}// "],"names":[],"mappings":"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","debug_id":"40fcccd2-1b06-55be-a543-56ab4397d316"}